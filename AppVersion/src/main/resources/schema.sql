 CREATE TABLE ADMINS(
 	ID INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
	USER_NAME VARCHAR(255) NOT NULL, 
	PASSWORD VARCHAR(255) NOT NULL,
	AUTHORITY VARCHAR(50) NOT NULL,
	IS_ACTIVE TINYINT(1) NOT NULL DEFAULT 1,	
	UNIQUE UQ_ADMINS_1 (USER_NAME),
	PRIMARY KEY (ID)
);
CREATE TABLE USERS (
  ID INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  EMAIL VARCHAR(255) NOT NULL,
  PASSWORD VARCHAR(4000) NOT NULL,
  FIRST_NAME VARCHAR(255) NOT NULL,
  LAST_NAME VARCHAR(255),
  IS_ACTIVE TINYINT(1) NOT NULL DEFAULT 1,  
  VERSION INT NOT NULL DEFAULT 0,
  unique UQ_USERS_1 (EMAIL),
  PRIMARY KEY (ID)
);
CREATE TABLE GROUPS(
	ID INT(10) UNSIGNED NOT NULL AUTO_INCREMENT, 
	NAME  VARCHAR (255) NOT NULL,
	UNIQUE UQ_GROUPS_1 (NAME),
	PRIMARY KEY (ID)
);
CREATE TABLE USER_GROUP (
  ID INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  USER_ID INT(10) UNSIGNED NOT NULL,
  GROUP_ID INT(10) UNSIGNED NOT NULL,
  UNIQUE UQ_USER_GROUP_1 (USER_ID, GROUP_ID),
  PRIMARY KEY (ID),
  KEY FK_USER_GROUP_1 (USER_ID),
  KEY FK_USER_GROUP_2 (GROUP_ID),
  CONSTRAINT FK_USER_GROUP_1 FOREIGN KEY (USER_ID) REFERENCES USERS (ID),
  CONSTRAINT FK_USER_GROUP_2 FOREIGN KEY (GROUP_ID) REFERENCES GROUPS (ID)
);

/* VIEWS */

CREATE OR REPLACE VIEW VIEW_USER_SUMMARY (USER_ID, EMAIL, GROUP_ID, GROUP_NAME) AS
  select u.id as USER_ID, u.email, g.id as GROUP_ID, g.name as GROUP_NAME
from users u left join user_group ug on u.id = ug.user_id
left join  groups g on ug.group_id = g.id;

/* FUNCTIONS */
DELIMITER //

CREATE FUNCTION x_cast_to_int(number bigint) RETURNS int
BEGIN
    return number;
END//

DELIMITER ;